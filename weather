<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WeatherSphere | Modern Weather Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --primary: #3498db;
            --secondary: #2c3e50;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #1a1a2e;
            --gradient: linear-gradient(135deg, #3498db, #2c3e50);
        }

        body {
            background: var(--dark);
            color: var(--light);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        #particles-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
            z-index: 1;
        }

        header {
            padding: 30px 0;
            text-align: center;
        }

        .logo {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(45deg, var(--primary), var(--light));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
        }

        .logo i {
            font-size: 2.8rem;
            color: var(--primary);
        }

        .tagline {
            font-size: 1.2rem;
            opacity: 0.8;
            margin-bottom: 30px;
        }

        .search-container {
            max-width: 600px;
            margin: 0 auto 40px;
            position: relative;
        }

        .search-box {
            width: 100%;
            padding: 15px 20px;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            color: white;
            font-size: 1.1rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .search-box:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.15);
            border-color: var(--primary);
        }

        .search-btn {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: var(--gradient);
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .search-btn:hover {
            transform: translateY(-50%) scale(1.1);
        }

        .main-content {
            display: flex;
            gap: 30px;
            margin-bottom: 40px;
        }

        .current-weather {
            flex: 1;
            background: rgba(30, 30, 50, 0.6);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .location {
            margin-bottom: 20px;
        }

        .location h2 {
            font-size: 2rem;
            margin-bottom: 5px;
        }

        .date-time {
            opacity: 0.8;
            font-size: 1.1rem;
        }

        .weather-main {
            text-align: center;
            margin: 20px 0;
        }

        .weather-icon {
            font-size: 6rem;
            margin-bottom: 15px;
            color: var(--primary);
            filter: drop-shadow(0 5px 10px rgba(0, 0, 0, 0.3));
        }

        .temperature {
            font-size: 4.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            background: linear-gradient(45deg, var(--primary), var(--light));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .weather-desc {
            font-size: 1.5rem;
            margin-bottom: 30px;
        }

        .weather-details {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .detail-item {
            background: rgba(0, 0, 0, 0.2);
            padding: 15px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .detail-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .detail-text h3 {
            font-size: 0.9rem;
            opacity: 0.7;
            margin-bottom: 5px;
        }

        .detail-value {
            font-size: 1.3rem;
            font-weight: 600;
        }

        .forecast {
            flex: 1;
            background: rgba(30, 30, 50, 0.6);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 25px;
            position: relative;
            padding-bottom: 10px;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background: var(--primary);
            border-radius: 2px;
        }

        .forecast-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
        }

        .forecast-card {
            background: rgba(0, 0, 0, 0.2);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .forecast-card:hover {
            transform: translateY(-10px);
            background: rgba(0, 0, 0, 0.3);
        }

        .forecast-date {
            font-size: 1.1rem;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .forecast-icon {
            font-size: 3rem;
            margin: 10px 0;
            color: var(--primary);
        }

        .forecast-temp {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 10px 0;
        }

        .forecast-desc {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .hourly-forecast {
            background: rgba(30, 30, 50, 0.6);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            margin-bottom: 40px;
        }

        .hourly-container {
            display: flex;
            overflow-x: auto;
            gap: 20px;
            padding: 10px 0;
            scrollbar-width: thin;
        }

        .hourly-container::-webkit-scrollbar {
            height: 8px;
        }

        .hourly-container::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .hourly-container::-webkit-scrollbar-thumb {
            background: var(--primary);
            border-radius: 10px;
        }

        .hourly-card {
            flex: 0 0 auto;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 15px;
            padding: 20px;
            min-width: 120px;
            text-align: center;
        }

        .hourly-time {
            font-size: 1.1rem;
            margin-bottom: 15px;
            font-weight: 600;
        }

        .hourly-icon {
            font-size: 2rem;
            margin: 10px 0;
            color: var(--primary);
        }

        .hourly-temp {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 10px 0;
        }

        footer {
            text-align: center;
            padding: 30px 0;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 1rem;
            opacity: 0.7;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .main-content {
                flex-direction: column;
            }
            
            .temperature {
                font-size: 3.5rem;
            }
        }

        @media (max-width: 768px) {
            .weather-details {
                grid-template-columns: 1fr;
            }
            
            .logo {
                font-size: 2rem;
            }
        }

        @media (max-width: 576px) {
            .container {
                padding: 15px;
            }
            
            .current-weather, .forecast, .hourly-forecast {
                padding: 20px;
            }
            
            .temperature {
                font-size: 3rem;
            }
        }
    </style>
</head>
<body>
    <!-- 3D Background -->
    <div id="particles-bg"></div>
    
    <div class="container">
        <header>
            <div class="logo">
                <i class="fas fa-cloud-sun"></i>
                WeatherSphere
            </div>
            <p class="tagline">Real-time weather data with beautiful visualizations</p>
            
            <div class="search-container">
                <input type="text" class="search-box" id="search-input" placeholder="Search for a city...">
                <button class="search-btn" id="search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </header>
        
        <div class="main-content">
            <div class="current-weather">
                <div class="location">
                    <h2 id="city-name">New York, US</h2>
                    <p class="date-time" id="current-date">Monday, June 28, 2023</p>
                </div>
                
                <div class="weather-main">
                    <div class="weather-icon" id="weather-icon">
                        <i class="fas fa-sun"></i>
                    </div>
                    <div class="temperature" id="temperature">24°C</div>
                    <div class="weather-desc" id="weather-description">Sunny</div>
                </div>
                
                <div class="weather-details">
                    <div class="detail-item">
                        <div class="detail-icon">
                            <i class="fas fa-wind"></i>
                        </div>
                        <div class="detail-text">
                            <h3>Wind Speed</h3>
                            <div class="detail-value" id="wind-speed">5.2 km/h</div>
                        </div>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-icon">
                            <i class="fas fa-tint"></i>
                        </div>
                        <div class="detail-text">
                            <h3>Humidity</h3>
                            <div class="detail-value" id="humidity">65%</div>
                        </div>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-icon">
                            <i class="fas fa-compress"></i>
                        </div>
                        <div class="detail-text">
                            <h3>Pressure</h3>
                            <div class="detail-value" id="pressure">1015 hPa</div>
                        </div>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-icon">
                            <i class="fas fa-eye"></i>
                        </div>
                        <div class="detail-text">
                            <h3>Visibility</h3>
                            <div class="detail-value" id="visibility">10 km</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="forecast">
                <h2 class="section-title">5-Day Forecast</h2>
                <div class="forecast-cards" id="forecast-container">
                    <!-- Forecast cards will be inserted here by JavaScript -->
                </div>
            </div>
        </div>
        
        <div class="hourly-forecast">
            <h2 class="section-title">24-Hour Forecast</h2>
            <div class="hourly-container" id="hourly-container">
                <!-- Hourly forecast cards will be inserted here by JavaScript -->
            </div>
        </div>
        
        <footer>
            <p>© 2023 WeatherSphere | Real-time Weather Data | Created with ❤️ for Accurate Forecasts</p>
        </footer>
    </div>
    
    <script>
        // Initialize Three.js for background particles
        function initParticles() {
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({ alpha: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.getElementById('particles-bg').appendChild(renderer.domElement);
            
            // Create particles
            const particlesGeometry = new THREE.BufferGeometry();
            const particlesCount = 2000;
            const posArray = new Float32Array(particlesCount * 3);
            
            for (let i = 0; i < particlesCount * 3; i++) {
                posArray[i] = (Math.random() - 0.5) * 50;
            }
            
            particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
            
            // Material
            const particlesMaterial = new THREE.PointsMaterial({
                size: 0.05,
                color: 0x3498db,
                transparent: true,
                opacity: 0.7
            });
            
            // Points system
            const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
            scene.add(particlesMesh);
            
            camera.position.z = 5;
            
            // Animation
            function animate() {
                requestAnimationFrame(animate);
                
                particlesMesh.rotation.x += 0.0005;
                particlesMesh.rotation.y += 0.0005;
                
                renderer.render(scene, camera);
            }
            
            animate();
            
            // Handle window resize
            window.addEventListener('resize', () => {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });
        }
        
        // Initialize the app
        document.addEventListener('DOMContentLoaded', () => {
            initParticles();
            updateDateTime();
            setInterval(updateDateTime, 60000); // Update time every minute
            
            // Set default weather data
            updateWeatherData({
                city: "New York",
                country: "US",
                temperature: 24,
                description: "Sunny",
                icon: "sun",
                windSpeed: 5.2,
                humidity: 65,
                pressure: 1015,
                visibility: 10
            });
            
            // Generate forecast data
            generateForecastData();
            generateHourlyData();
            
            // Search functionality
            document.getElementById('search-btn').addEventListener('click', searchWeather);
            document.getElementById('search-input').addEventListener('keypress', (e) => {
                if (e.key === 'Enter') searchWeather();
            });
        });
        
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', options);
        }
        
        // Update weather data
        function updateWeatherData(data) {
            document.getElementById('city-name').textContent = `${data.city}, ${data.country}`;
            document.getElementById('temperature').textContent = `${data.temperature}°C`;
            document.getElementById('weather-description').textContent = data.description;
            document.getElementById('weather-icon').innerHTML = `<i class="fas fa-${data.icon}"></i>`;
            document.getElementById('wind-speed').textContent = `${data.windSpeed} km/h`;
            document.getElementById('humidity').textContent = `${data.humidity}%`;
            document.getElementById('pressure').textContent = `${data.pressure} hPa`;
            document.getElementById('visibility').textContent = `${data.visibility} km`;
        }
        
        // Generate sample forecast data
        function generateForecastData() {
            const forecastContainer = document.getElementById('forecast-container');
            const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];
            const icons = ['sun', 'cloud-sun', 'cloud-rain', 'cloud', 'bolt'];
            const temps = [25, 23, 19, 21, 24];
            const descs = ['Sunny', 'Partly Cloudy', 'Rainy', 'Cloudy', 'Stormy'];
            
            forecastContainer.innerHTML = '';
            
            for (let i = 0; i < 5; i++) {
                const card = document.createElement('div');
                card.className = 'forecast-card';
                card.innerHTML = `
                    <div class="forecast-date">${days[i]}</div>
                    <div class="forecast-icon"><i class="fas fa-${icons[i]}"></i></div>
                    <div class="forecast-temp">${temps[i]}°C</div>
                    <div class="forecast-desc">${descs[i]}</div>
                `;
                forecastContainer.appendChild(card);
            }
        }
        
        // Generate sample hourly data
        function generateHourlyData() {
            const hourlyContainer = document.getElementById('hourly-container');
            const hours = ['Now', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'];
            const icons = ['sun', 'sun', 'cloud-sun', 'cloud-sun', 'cloud', 'cloud', 'cloud-rain', 'cloud-rain', 'cloud', 'cloud', 'moon', 'moon'];
            const temps = [24, 25, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16];
            
            hourlyContainer.innerHTML = '';
            
            for (let i = 0; i < 12; i++) {
                const card = document.createElement('div');
                card.className = 'hourly-card';
                card.innerHTML = `
                    <div class="hourly-time">${hours[i]}</div>
                    <div class="hourly-icon"><i class="fas fa-${icons[i]}"></i></div>
                    <div class="hourly-temp">${temps[i]}°C</div>
                `;
                hourlyContainer.appendChild(card);
            }
        }
        
        // Search weather function
        function searchWeather() {
            const input = document.getElementById('search-input').value.trim();
            if (!input) return;
            
            // Show loading state
            document.getElementById('city-name').textContent = "Loading...";
            
            // Simulate API call with timeout
            setTimeout(() => {
                // In a real app, you would fetch from a weather API
                // For demo, we'll generate random data
                const cities = [
                    { city: "New York", country: "US", temp: 24, desc: "Sunny", icon: "sun" },
                    { city: "London", country: "UK", temp: 18, desc: "Cloudy", icon: "cloud" },
                    { city: "Tokyo", country: "JP", temp: 28, desc: "Partly Cloudy", icon: "cloud-sun" },
                    { city: "Sydney", country: "AU", temp: 22, desc: "Rainy", icon: "cloud-rain" },
                    { city: "Paris", country: "FR", temp: 21, desc: "Sunny", icon: "sun" }
                ];
                
                const randomCity = cities[Math.floor(Math.random() * cities.length)];
                
                updateWeatherData({
                    city: input,
                    country: randomCity.country,
                    temperature: randomCity.temp,
                    description: randomCity.desc,
                    icon: randomCity.icon,
                    windSpeed: (Math.random() * 10 + 2).toFixed(1),
                    humidity: Math.floor(Math.random() * 40 + 50),
                    pressure: Math.floor(Math.random() * 20 + 1000),
                    visibility: Math.floor(Math.random() * 10 + 5)
                });
                
                // Update forecast and hourly data
                generateForecastData();
                generateHourlyData();
            }, 800);
        }
    </script>
</body>
</html>
